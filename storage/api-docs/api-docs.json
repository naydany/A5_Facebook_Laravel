{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/friend/list": {
            "get": {
                "tags": [
                    "Friend"
                ],
                "summary": "Get a list of confirmed friends",
                "operationId": "3b50813512a1ae270c8d4112b3a73957",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/friend/confirm-request/{id}": {
            "patch": {
                "tags": [
                    "Friend"
                ],
                "summary": "Confirm a friend request",
                "operationId": "a3e8baf2f434944fb192a930104b6182",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the friend request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend request confirmed successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Friend request not found or unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/friend/delete-request/{sender_id}": {
            "delete": {
                "tags": [
                    "Friend"
                ],
                "summary": "Delete a friend request",
                "operationId": "621453a0adb9f00b5c0a276cc7defff2",
                "parameters": [
                    {
                        "name": "sender_id",
                        "in": "path",
                        "description": "ID of the sender of the friend request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend request deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Friend request not found or unauthorized to delete"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/comment/list": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get a list of comments",
                "operationId": "0653e36edf911aedd8954cf91aed7ce4",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/api/post/list": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get a list of posts",
                "operationId": "9a70912c4ec51c17f5f7b5d17d549fb5",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/api/post/store": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Store a new post",
                "operationId": "77860aec6c206e13b806f3198f5d998b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Title of the post",
                                        "type": "string",
                                        "example": "Event"
                                    },
                                    "content": {
                                        "description": "Content of the post",
                                        "type": "string",
                                        "example": "Party"
                                    },
                                    "images": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "user_id": {
                                        "description": "ID of the user creating the post",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post created successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/post/{id}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get a specific post",
                "operationId": "239ae40d24d82380dd09557f9614ad9e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post retrieved successfully"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Post"
                ],
                "summary": "Update a post",
                "operationId": "810f728ecb4e0ff17868cb92df339718",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Post Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated Post Content"
                                    },
                                    "images": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete a post",
                "operationId": "6d25b4d3f1749560f4d0d0ae67e41858",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Post",
            "description": "Operations about posts"
        }
    ]
}